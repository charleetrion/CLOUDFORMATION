AWSTemplateFormatVersion: "2010-09-09"
Resources:

  PutImagePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "PutImagePolicy"
      Roles:
        - !Ref ECSExecutionRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - ecr:GetAuthorizationToken
            Resource: "*"
          - Effect: "Allow"
            Action:
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:BatchCheckLayerAvailability
              - ecr:PutImage
              - ecr:InitiateLayerUpload
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload
            Resource:
              - "arn:aws:ecr:us-east-1:503561429281:repository/fastapi-cloud"

  ECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ECSExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                Resource: "*"

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow HTTP traffic on port 8000"
      VpcId: !ImportValue MyVPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: load-balancer-8000
      Scheme: internet-facing
      Subnets:
        - !ImportValue MyPublicSubnetId
        - !ImportValue MyPublicSubnet2Id
      SecurityGroups:
        - !Ref SecurityGroup
      Type: application

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: "target-group-8000"
      VpcId: !ImportValue MyVPCId
      Port: 8000
      Protocol: HTTP
      TargetType: instance
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/health"
      HealthCheckPort: 8000
      HealthCheckProtocol: HTTP

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 8000
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  ListenerRuleHealthCheck:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref Listener
      Priority: 1  # Ajusta la prioridad si tienes m√°s reglas
      Conditions:
        - Field: "path-pattern"
          Values:
            - "/health"
      Actions:
        - Type: "forward"
          TargetGroupArn: !Ref TargetGroup

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: task-family-fastapi
      NetworkMode: "bridge"
      ExecutionRoleArn: !Ref ECSExecutionRole
      ContainerDefinitions:
        - Name: Deploy
          Image: "503561429281.dkr.ecr.us-east-1.amazonaws.com/fastapi-cloud:latest"
          Memory: 128
          Cpu: 128
          PortMappings:
            - ContainerPort: 8000
              HostPort: 8000
          Environment:
            - Name: DB_HOST
              Value: "fastapi-rds-mysql-public.cdg8ka0syqql.us-east-1.rds.amazonaws.com"
            - Name: DB_PORT
              Value: "3306"
            - Name: DB_NAME
              Value: "FastapiCloudFormation"
          Secrets:
            - Name: DB_USER
              ValueFrom: "arn:aws:secretsmanager:us-east-1:503561429281:secret:RDSCredentials-tjBzuc:usurname"
            - Name: DB_PASSWORD
              ValueFrom: "arn:aws:secretsmanager:us-east-1:503561429281:secret:RDSCredentials-tjBzuc:password"

  ECSService:
    Type: AWS::ECS::Service
    DependsOn: Listener
    Properties:
      Cluster: !ImportValue ECSClusterName
      ServiceName: service-fastapi
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 1
      LaunchType: EC2
      LoadBalancers:
        - ContainerName: Deploy
          ContainerPort: 8000
          TargetGroupArn: !Ref TargetGroup

Outputs:
  LoadBalancerDNSName:
    Value: !GetAtt LoadBalancer.DNSName
    Export:
      Name: LoadBalancerDNSName

  LoadBalancerArn:
    Value: !Ref LoadBalancer
    Export:
      Name: LoadBalancerArn

  TargetGroupArn:
    Value: !Ref TargetGroup
    Export:
      Name: TargetGroupArn

  ListenerArn:
    Value: !Ref Listener
    Export:
      Name: ListenerArn

  ECSServiceName:
    Value: !Ref ECSService
    Export:
      Name: ECSService

  TaskDefinitionArn:
    Value: !Ref TaskDefinition
    Export:
      Name: TaskDefinition

  SecurityGroup:
    Value: !Ref SecurityGroup
    Export:
      Name: SG-P-8000
